#include <stdio.h>
#define MAX(a,b) (((a)>(b))?(a):(b))
#define MAX_DEGREE 101
#define _CRT_SECURE_NO_WARNINGS

typedef struct { // 다항식 구조체 타입 선언
int degree; // 다항식의 차수
float coef[MAX_DEGREE]; // 다항식의 계수
} polynomial;



// C = A+B 여기서 A와 B는 다항식이다. 구조체가 반환된다.

polynomial poly_minus(polynomial A, polynomial B)
{
	polynomial C; // 결과 다항식
	int Apos = 0, Bpos = 0, Cpos = 0; // 배열 인덱스 변수
	int degree_a = A.degree;
	int degree_b = B.degree;
	C.degree = MAX(A.degree, B.degree); // 결과 다항식 차수

	while (Apos <= A.degree && Bpos <= B.degree)
	{
		if (degree_a > degree_b)  // A항 > B항
		{
			C.coef[Cpos++] = A.coef[Apos++];
			degree_a--;
		}

		else if (degree_a == degree_b)  // A항 == B항
		{
			C.coef[Cpos++] = A.coef[Apos++] - B.coef[Bpos++];
			degree_a--; degree_b--;
		}

		else  // B항 > A항
		{
			C.coef[Cpos++] = B.coef[Bpos++];
			degree_b--;
		}
	}

	return C;
}

void print_poly(polynomial p)
{
	for (int i = p.degree; i > 0; i--)
		printf("%3.1fx^%d + ", p.coef[p.degree - i], i);

	printf("%3.1f \n", p.coef[p.degree]);
}

int main(void)
{
	polynomial a, b, c;

	printf("<첫번째 다항식>\n");
	printf("첫번째 다항식의 최고 차수: ");
	scanf_s("%d", &a.degree);
	printf("각 항의 계수를 차례로 입력 : ");
	for (int i = 0; i <= a.degree; i++)
		scanf_s("%f", &a.coef[i]);
	printf("첫번째 다항식 출력: ");
	print_poly(a);
	printf("\n\n");

	printf("<두번째 다항식>\n");
	printf("두번째 다항식의 최고 차수 : ");
	scanf_s("%d", &b.degree);
	printf("각 항의 계수를 차례로 입력: ");
	for (int i = 0; i <= b.degree; i++)
		scanf_s("%f", &b.coef[i]);
	printf("두번째 다항식 출력: ");
	print_poly(b);

	printf("\n<두 다항식의 뺄셈>\n");
	print_poly(a);
	print_poly(b);
	c = poly_minus(a, b);
	printf("----------------------------------------------------------\n");
	printf("뺄셈 결과: ");
	print_poly(c);

	return 0;
}